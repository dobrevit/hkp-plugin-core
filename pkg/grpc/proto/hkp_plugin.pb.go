// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/hkp_plugin.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyChangeEvent_ChangeType int32

const (
	KeyChangeEvent_UNKNOWN KeyChangeEvent_ChangeType = 0
	KeyChangeEvent_CREATE  KeyChangeEvent_ChangeType = 1
	KeyChangeEvent_UPDATE  KeyChangeEvent_ChangeType = 2
	KeyChangeEvent_DELETE  KeyChangeEvent_ChangeType = 3
)

// Enum value maps for KeyChangeEvent_ChangeType.
var (
	KeyChangeEvent_ChangeType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CREATE",
		2: "UPDATE",
		3: "DELETE",
	}
	KeyChangeEvent_ChangeType_value = map[string]int32{
		"UNKNOWN": 0,
		"CREATE":  1,
		"UPDATE":  2,
		"DELETE":  3,
	}
)

func (x KeyChangeEvent_ChangeType) Enum() *KeyChangeEvent_ChangeType {
	p := new(KeyChangeEvent_ChangeType)
	*p = x
	return p
}

func (x KeyChangeEvent_ChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyChangeEvent_ChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_hkp_plugin_proto_enumTypes[0].Descriptor()
}

func (KeyChangeEvent_ChangeType) Type() protoreflect.EnumType {
	return &file_proto_hkp_plugin_proto_enumTypes[0]
}

func (x KeyChangeEvent_ChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyChangeEvent_ChangeType.Descriptor instead.
func (KeyChangeEvent_ChangeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{8, 0}
}

type StorageQuery_QueryType int32

const (
	StorageQuery_LOOKUP StorageQuery_QueryType = 0
	StorageQuery_SEARCH StorageQuery_QueryType = 1
	StorageQuery_FETCH  StorageQuery_QueryType = 2
)

// Enum value maps for StorageQuery_QueryType.
var (
	StorageQuery_QueryType_name = map[int32]string{
		0: "LOOKUP",
		1: "SEARCH",
		2: "FETCH",
	}
	StorageQuery_QueryType_value = map[string]int32{
		"LOOKUP": 0,
		"SEARCH": 1,
		"FETCH":  2,
	}
)

func (x StorageQuery_QueryType) Enum() *StorageQuery_QueryType {
	p := new(StorageQuery_QueryType)
	*p = x
	return p
}

func (x StorageQuery_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageQuery_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_hkp_plugin_proto_enumTypes[1].Descriptor()
}

func (StorageQuery_QueryType) Type() protoreflect.EnumType {
	return &file_proto_hkp_plugin_proto_enumTypes[1]
}

func (x StorageQuery_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageQuery_QueryType.Descriptor instead.
func (StorageQuery_QueryType) EnumDescriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{11, 0}
}

type HealthStatus_Status int32

const (
	HealthStatus_UNKNOWN   HealthStatus_Status = 0
	HealthStatus_HEALTHY   HealthStatus_Status = 1
	HealthStatus_DEGRADED  HealthStatus_Status = 2
	HealthStatus_UNHEALTHY HealthStatus_Status = 3
)

// Enum value maps for HealthStatus_Status.
var (
	HealthStatus_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEALTHY",
		2: "DEGRADED",
		3: "UNHEALTHY",
	}
	HealthStatus_Status_value = map[string]int32{
		"UNKNOWN":   0,
		"HEALTHY":   1,
		"DEGRADED":  2,
		"UNHEALTHY": 3,
	}
)

func (x HealthStatus_Status) Enum() *HealthStatus_Status {
	p := new(HealthStatus_Status)
	*p = x
	return p
}

func (x HealthStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_hkp_plugin_proto_enumTypes[2].Descriptor()
}

func (HealthStatus_Status) Type() protoreflect.EnumType {
	return &file_proto_hkp_plugin_proto_enumTypes[2]
}

func (x HealthStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus_Status.Descriptor instead.
func (HealthStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{14, 0}
}

type ThreatInfo_ThreatLevel int32

const (
	ThreatInfo_UNKNOWN  ThreatInfo_ThreatLevel = 0
	ThreatInfo_LOW      ThreatInfo_ThreatLevel = 1
	ThreatInfo_MEDIUM   ThreatInfo_ThreatLevel = 2
	ThreatInfo_HIGH     ThreatInfo_ThreatLevel = 3
	ThreatInfo_CRITICAL ThreatInfo_ThreatLevel = 4
)

// Enum value maps for ThreatInfo_ThreatLevel.
var (
	ThreatInfo_ThreatLevel_name = map[int32]string{
		0: "UNKNOWN",
		1: "LOW",
		2: "MEDIUM",
		3: "HIGH",
		4: "CRITICAL",
	}
	ThreatInfo_ThreatLevel_value = map[string]int32{
		"UNKNOWN":  0,
		"LOW":      1,
		"MEDIUM":   2,
		"HIGH":     3,
		"CRITICAL": 4,
	}
)

func (x ThreatInfo_ThreatLevel) Enum() *ThreatInfo_ThreatLevel {
	p := new(ThreatInfo_ThreatLevel)
	*p = x
	return p
}

func (x ThreatInfo_ThreatLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThreatInfo_ThreatLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_hkp_plugin_proto_enumTypes[3].Descriptor()
}

func (ThreatInfo_ThreatLevel) Type() protoreflect.EnumType {
	return &file_proto_hkp_plugin_proto_enumTypes[3]
}

func (x ThreatInfo_ThreatLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThreatInfo_ThreatLevel.Descriptor instead.
func (ThreatInfo_ThreatLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{17, 0}
}

// Empty message for methods that don't require parameters
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{0}
}

// Plugin metadata and capabilities
type PluginInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Capabilities  []string               `protobuf:"bytes,4,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginInfo) Reset() {
	*x = PluginInfo{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo) ProtoMessage() {}

func (x *PluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo.ProtoReflect.Descriptor instead.
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *PluginInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PluginInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PluginInfo) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PluginInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Plugin initialization
type InitRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ConfigJson        string                 `protobuf:"bytes,1,opt,name=config_json,json=configJson,proto3" json:"config_json,omitempty"` // JSON-encoded configuration
	HockeypuckVersion string                 `protobuf:"bytes,2,opt,name=hockeypuck_version,json=hockeypuckVersion,proto3" json:"hockeypuck_version,omitempty"`
	ProtocolVersion   string                 `protobuf:"bytes,3,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	Environment       map[string]string      `protobuf:"bytes,4,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *InitRequest) GetConfigJson() string {
	if x != nil {
		return x.ConfigJson
	}
	return ""
}

func (x *InitRequest) GetHockeypuckVersion() string {
	if x != nil {
		return x.HockeypuckVersion
	}
	return ""
}

func (x *InitRequest) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *InitRequest) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

type InitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Info          *PluginInfo            `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *InitResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InitResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *InitResponse) GetInfo() *PluginInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// Plugin shutdown
type ShutdownRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TimeoutSeconds int32                  `protobuf:"varint,1,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	Reason         string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ShutdownRequest) Reset() {
	*x = ShutdownRequest{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRequest) ProtoMessage() {}

func (x *ShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRequest.ProtoReflect.Descriptor instead.
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *ShutdownRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *ShutdownRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ShutdownResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownResponse) Reset() {
	*x = ShutdownResponse{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownResponse) ProtoMessage() {}

func (x *ShutdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownResponse.ProtoReflect.Descriptor instead.
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *ShutdownResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ShutdownResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// HTTP request handling
type HTTPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          []byte                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	RemoteAddr    string                 `protobuf:"bytes,6,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	QueryParams   map[string]string      `protobuf:"bytes,7,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPRequest) Reset() {
	*x = HTTPRequest{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPRequest) ProtoMessage() {}

func (x *HTTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPRequest.ProtoReflect.Descriptor instead.
func (*HTTPRequest) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *HTTPRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HTTPRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HTTPRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HTTPRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HTTPRequest) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *HTTPRequest) GetQueryParams() map[string]string {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

type HTTPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          []byte                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	ContinueChain bool                   `protobuf:"varint,4,opt,name=continue_chain,json=continueChain,proto3" json:"continue_chain,omitempty"` // Whether to continue middleware chain
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPResponse) Reset() {
	*x = HTTPResponse{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPResponse) ProtoMessage() {}

func (x *HTTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPResponse.ProtoReflect.Descriptor instead.
func (*HTTPResponse) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *HTTPResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HTTPResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HTTPResponse) GetContinueChain() bool {
	if x != nil {
		return x.ContinueChain
	}
	return false
}

// Key change events (Hockeypuck compatibility)
type KeyChangeEvent struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Id            string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChangeType    KeyChangeEvent_ChangeType `protobuf:"varint,2,opt,name=change_type,json=changeType,proto3,enum=hkpplugin.KeyChangeEvent_ChangeType" json:"change_type,omitempty"`
	Fingerprint   string                    `protobuf:"bytes,3,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	KeyData       []byte                    `protobuf:"bytes,4,opt,name=key_data,json=keyData,proto3" json:"key_data,omitempty"` // OpenPGP key data
	Timestamp     int64                     `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyChangeEvent) Reset() {
	*x = KeyChangeEvent{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyChangeEvent) ProtoMessage() {}

func (x *KeyChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyChangeEvent.ProtoReflect.Descriptor instead.
func (*KeyChangeEvent) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *KeyChangeEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KeyChangeEvent) GetChangeType() KeyChangeEvent_ChangeType {
	if x != nil {
		return x.ChangeType
	}
	return KeyChangeEvent_UNKNOWN
}

func (x *KeyChangeEvent) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *KeyChangeEvent) GetKeyData() []byte {
	if x != nil {
		return x.KeyData
	}
	return nil
}

func (x *KeyChangeEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Event subscription
type EventFilter struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	EventTypes      []string               `protobuf:"bytes,1,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`
	MetadataFilters map[string]string      `protobuf:"bytes,2,rep,name=metadata_filters,json=metadataFilters,proto3" json:"metadata_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EventFilter) Reset() {
	*x = EventFilter{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFilter) ProtoMessage() {}

func (x *EventFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFilter.ProtoReflect.Descriptor instead.
func (*EventFilter) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *EventFilter) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *EventFilter) GetMetadataFilters() map[string]string {
	if x != nil {
		return x.MetadataFilters
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // JSON-encoded event data
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Source        string                 `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Event) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Event) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Event) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Storage queries (proxy through gRPC)
type StorageQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          StorageQuery_QueryType `protobuf:"varint,1,opt,name=type,proto3,enum=hkpplugin.StorageQuery_QueryType" json:"type,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Options       map[string]string      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageQuery) Reset() {
	*x = StorageQuery{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageQuery) ProtoMessage() {}

func (x *StorageQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageQuery.ProtoReflect.Descriptor instead.
func (*StorageQuery) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *StorageQuery) GetType() StorageQuery_QueryType {
	if x != nil {
		return x.Type
	}
	return StorageQuery_LOOKUP
}

func (x *StorageQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StorageQuery) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *StorageQuery) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *StorageQuery) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type StorageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Keys          []*KeyInfo             `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	TotalCount    int32                  `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageResponse) Reset() {
	*x = StorageResponse{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageResponse) ProtoMessage() {}

func (x *StorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageResponse.ProtoReflect.Descriptor instead.
func (*StorageResponse) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{12}
}

func (x *StorageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StorageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *StorageResponse) GetKeys() []*KeyInfo {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *StorageResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type KeyInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Fingerprint    string                 `protobuf:"bytes,1,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	KeyId          string                 `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	UserIds        []string               `protobuf:"bytes,3,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	CreationTime   int64                  `protobuf:"varint,4,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	ExpirationTime int64                  `protobuf:"varint,5,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	Revoked        bool                   `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	KeyData        []byte                 `protobuf:"bytes,7,opt,name=key_data,json=keyData,proto3" json:"key_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *KeyInfo) Reset() {
	*x = KeyInfo{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyInfo) ProtoMessage() {}

func (x *KeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyInfo.ProtoReflect.Descriptor instead.
func (*KeyInfo) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *KeyInfo) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *KeyInfo) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *KeyInfo) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *KeyInfo) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *KeyInfo) GetExpirationTime() int64 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *KeyInfo) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *KeyInfo) GetKeyData() []byte {
	if x != nil {
		return x.KeyData
	}
	return nil
}

// Health checks
type HealthStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        HealthStatus_Status    `protobuf:"varint,1,opt,name=status,proto3,enum=hkpplugin.HealthStatus_Status" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *HealthStatus) GetStatus() HealthStatus_Status {
	if x != nil {
		return x.Status
	}
	return HealthStatus_UNKNOWN
}

func (x *HealthStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthStatus) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *HealthStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Rate limiting
type RateLimitCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Identifier    string                 `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"` // IP, key ID, etc.
	Action        string                 `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`         // "lookup", "submit", etc.
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimitCheck) Reset() {
	*x = RateLimitCheck{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitCheck) ProtoMessage() {}

func (x *RateLimitCheck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitCheck.ProtoReflect.Descriptor instead.
func (*RateLimitCheck) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *RateLimitCheck) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *RateLimitCheck) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RateLimitCheck) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RateLimitResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Allowed           bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Reason            string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	RetryAfterSeconds int32                  `protobuf:"varint,3,opt,name=retry_after_seconds,json=retryAfterSeconds,proto3" json:"retry_after_seconds,omitempty"`
	Headers           map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Headers to add to HTTP response
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RateLimitResponse) Reset() {
	*x = RateLimitResponse{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitResponse) ProtoMessage() {}

func (x *RateLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitResponse.ProtoReflect.Descriptor instead.
func (*RateLimitResponse) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{16}
}

func (x *RateLimitResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *RateLimitResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RateLimitResponse) GetRetryAfterSeconds() int32 {
	if x != nil {
		return x.RetryAfterSeconds
	}
	return 0
}

func (x *RateLimitResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

// Threat detection
type ThreatInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Level         ThreatInfo_ThreatLevel `protobuf:"varint,2,opt,name=level,proto3,enum=hkpplugin.ThreatInfo_ThreatLevel" json:"level,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Source        string                 `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	Indicators    map[string]string      `protobuf:"bytes,6,rep,name=indicators,proto3" json:"indicators,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     int64                  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreatInfo) Reset() {
	*x = ThreatInfo{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreatInfo) ProtoMessage() {}

func (x *ThreatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreatInfo.ProtoReflect.Descriptor instead.
func (*ThreatInfo) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{17}
}

func (x *ThreatInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ThreatInfo) GetLevel() ThreatInfo_ThreatLevel {
	if x != nil {
		return x.Level
	}
	return ThreatInfo_UNKNOWN
}

func (x *ThreatInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ThreatInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ThreatInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ThreatInfo) GetIndicators() map[string]string {
	if x != nil {
		return x.Indicators
	}
	return nil
}

func (x *ThreatInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Plugin capabilities
type Capability struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Options       map[string]string      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Capability) Reset() {
	*x = Capability{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Capability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capability) ProtoMessage() {}

func (x *Capability) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capability.ProtoReflect.Descriptor instead.
func (*Capability) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{18}
}

func (x *Capability) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Capability) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Capability) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type HostInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Version         string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ProtocolVersion string                 `protobuf:"bytes,2,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	LoadedPlugins   []*PluginInfo          `protobuf:"bytes,3,rep,name=loaded_plugins,json=loadedPlugins,proto3" json:"loaded_plugins,omitempty"`
	Configuration   map[string]string      `protobuf:"bytes,4,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{19}
}

func (x *HostInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HostInfo) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *HostInfo) GetLoadedPlugins() []*PluginInfo {
	if x != nil {
		return x.LoadedPlugins
	}
	return nil
}

func (x *HostInfo) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type PluginQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetPlugin  string                 `protobuf:"bytes,1,opt,name=target_plugin,json=targetPlugin,proto3" json:"target_plugin,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // JSON-encoded query data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginQuery) Reset() {
	*x = PluginQuery{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginQuery) ProtoMessage() {}

func (x *PluginQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginQuery.ProtoReflect.Descriptor instead.
func (*PluginQuery) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{20}
}

func (x *PluginQuery) GetTargetPlugin() string {
	if x != nil {
		return x.TargetPlugin
	}
	return ""
}

func (x *PluginQuery) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *PluginQuery) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PluginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // JSON-encoded response data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginResponse) Reset() {
	*x = PluginResponse{}
	mi := &file_proto_hkp_plugin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginResponse) ProtoMessage() {}

func (x *PluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hkp_plugin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginResponse.ProtoReflect.Descriptor instead.
func (*PluginResponse) Descriptor() ([]byte, []int) {
	return file_proto_hkp_plugin_proto_rawDescGZIP(), []int{21}
}

func (x *PluginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PluginResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *PluginResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_hkp_plugin_proto protoreflect.FileDescriptor

const file_proto_hkp_plugin_proto_rawDesc = "" +
	"\n" +
	"\x16proto/hkp_plugin.proto\x12\thkpplugin\"\a\n" +
	"\x05Empty\"\xfe\x01\n" +
	"\n" +
	"PluginInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\"\n" +
	"\fcapabilities\x18\x04 \x03(\tR\fcapabilities\x12?\n" +
	"\bmetadata\x18\x05 \x03(\v2#.hkpplugin.PluginInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x02\n" +
	"\vInitRequest\x12\x1f\n" +
	"\vconfig_json\x18\x01 \x01(\tR\n" +
	"configJson\x12-\n" +
	"\x12hockeypuck_version\x18\x02 \x01(\tR\x11hockeypuckVersion\x12)\n" +
	"\x10protocol_version\x18\x03 \x01(\tR\x0fprotocolVersion\x12I\n" +
	"\venvironment\x18\x04 \x03(\v2'.hkpplugin.InitRequest.EnvironmentEntryR\venvironment\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\fInitResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12)\n" +
	"\x04info\x18\x03 \x01(\v2\x15.hkpplugin.PluginInfoR\x04info\"R\n" +
	"\x0fShutdownRequest\x12'\n" +
	"\x0ftimeout_seconds\x18\x01 \x01(\x05R\x0etimeoutSeconds\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"B\n" +
	"\x10ShutdownResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x85\x03\n" +
	"\vHTTPRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12=\n" +
	"\aheaders\x18\x04 \x03(\v2#.hkpplugin.HTTPRequest.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x05 \x01(\fR\x04body\x12\x1f\n" +
	"\vremote_addr\x18\x06 \x01(\tR\n" +
	"remoteAddr\x12J\n" +
	"\fquery_params\x18\a \x03(\v2'.hkpplugin.HTTPRequest.QueryParamsEntryR\vqueryParams\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10QueryParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe6\x01\n" +
	"\fHTTPResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12>\n" +
	"\aheaders\x18\x02 \x03(\v2$.hkpplugin.HTTPResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04body\x12%\n" +
	"\x0econtinue_chain\x18\x04 \x01(\bR\rcontinueChain\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x02\n" +
	"\x0eKeyChangeEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12E\n" +
	"\vchange_type\x18\x02 \x01(\x0e2$.hkpplugin.KeyChangeEvent.ChangeTypeR\n" +
	"changeType\x12 \n" +
	"\vfingerprint\x18\x03 \x01(\tR\vfingerprint\x12\x19\n" +
	"\bkey_data\x18\x04 \x01(\fR\akeyData\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"=\n" +
	"\n" +
	"ChangeType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06CREATE\x10\x01\x12\n" +
	"\n" +
	"\x06UPDATE\x10\x02\x12\n" +
	"\n" +
	"\x06DELETE\x10\x03\"\xca\x01\n" +
	"\vEventFilter\x12\x1f\n" +
	"\vevent_types\x18\x01 \x03(\tR\n" +
	"eventTypes\x12V\n" +
	"\x10metadata_filters\x18\x02 \x03(\v2+.hkpplugin.EventFilter.MetadataFiltersEntryR\x0fmetadataFilters\x1aB\n" +
	"\x14MetadataFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xee\x01\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x16\n" +
	"\x06source\x18\x05 \x01(\tR\x06source\x12:\n" +
	"\bmetadata\x18\x06 \x03(\v2\x1e.hkpplugin.Event.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb5\x02\n" +
	"\fStorageQuery\x125\n" +
	"\x04type\x18\x01 \x01(\x0e2!.hkpplugin.StorageQuery.QueryTypeR\x04type\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12>\n" +
	"\aoptions\x18\x03 \x03(\v2$.hkpplugin.StorageQuery.OptionsEntryR\aoptions\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\".\n" +
	"\tQueryType\x12\n" +
	"\n" +
	"\x06LOOKUP\x10\x00\x12\n" +
	"\n" +
	"\x06SEARCH\x10\x01\x12\t\n" +
	"\x05FETCH\x10\x02\"\x8a\x01\n" +
	"\x0fStorageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12&\n" +
	"\x04keys\x18\x03 \x03(\v2\x12.hkpplugin.KeyInfoR\x04keys\x12\x1f\n" +
	"\vtotal_count\x18\x04 \x01(\x05R\n" +
	"totalCount\"\xe0\x01\n" +
	"\aKeyInfo\x12 \n" +
	"\vfingerprint\x18\x01 \x01(\tR\vfingerprint\x12\x15\n" +
	"\x06key_id\x18\x02 \x01(\tR\x05keyId\x12\x19\n" +
	"\buser_ids\x18\x03 \x03(\tR\auserIds\x12#\n" +
	"\rcreation_time\x18\x04 \x01(\x03R\fcreationTime\x12'\n" +
	"\x0fexpiration_time\x18\x05 \x01(\x03R\x0eexpirationTime\x12\x18\n" +
	"\arevoked\x18\x06 \x01(\bR\arevoked\x12\x19\n" +
	"\bkey_data\x18\a \x01(\fR\akeyData\"\xbb\x02\n" +
	"\fHealthStatus\x126\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1e.hkpplugin.HealthStatus.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12>\n" +
	"\adetails\x18\x03 \x03(\v2$.hkpplugin.HealthStatus.DetailsEntryR\adetails\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"?\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aHEALTHY\x10\x01\x12\f\n" +
	"\bDEGRADED\x10\x02\x12\r\n" +
	"\tUNHEALTHY\x10\x03\"\xca\x01\n" +
	"\x0eRateLimitCheck\x12\x1e\n" +
	"\n" +
	"identifier\x18\x01 \x01(\tR\n" +
	"identifier\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12C\n" +
	"\bmetadata\x18\x03 \x03(\v2'.hkpplugin.RateLimitCheck.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf6\x01\n" +
	"\x11RateLimitResponse\x12\x18\n" +
	"\aallowed\x18\x01 \x01(\bR\aallowed\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12.\n" +
	"\x13retry_after_seconds\x18\x03 \x01(\x05R\x11retryAfterSeconds\x12C\n" +
	"\aheaders\x18\x04 \x03(\v2).hkpplugin.RateLimitResponse.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x03\n" +
	"\n" +
	"ThreatInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x127\n" +
	"\x05level\x18\x02 \x01(\x0e2!.hkpplugin.ThreatInfo.ThreatLevelR\x05level\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x16\n" +
	"\x06source\x18\x05 \x01(\tR\x06source\x12E\n" +
	"\n" +
	"indicators\x18\x06 \x03(\v2%.hkpplugin.ThreatInfo.IndicatorsEntryR\n" +
	"indicators\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x03R\ttimestamp\x1a=\n" +
	"\x0fIndicatorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"G\n" +
	"\vThreatLevel\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\a\n" +
	"\x03LOW\x10\x01\x12\n" +
	"\n" +
	"\x06MEDIUM\x10\x02\x12\b\n" +
	"\x04HIGH\x10\x03\x12\f\n" +
	"\bCRITICAL\x10\x04\"\xb4\x01\n" +
	"\n" +
	"Capability\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12<\n" +
	"\aoptions\x18\x03 \x03(\v2\".hkpplugin.Capability.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9d\x02\n" +
	"\bHostInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12)\n" +
	"\x10protocol_version\x18\x02 \x01(\tR\x0fprotocolVersion\x12<\n" +
	"\x0eloaded_plugins\x18\x03 \x03(\v2\x15.hkpplugin.PluginInfoR\rloadedPlugins\x12L\n" +
	"\rconfiguration\x18\x04 \x03(\v2&.hkpplugin.HostInfo.ConfigurationEntryR\rconfiguration\x1a@\n" +
	"\x12ConfigurationEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"^\n" +
	"\vPluginQuery\x12#\n" +
	"\rtarget_plugin\x18\x01 \x01(\tR\ftargetPlugin\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"T\n" +
	"\x0ePluginResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data2\xbf\x05\n" +
	"\tHKPPlugin\x12=\n" +
	"\n" +
	"Initialize\x12\x16.hkpplugin.InitRequest\x1a\x17.hkpplugin.InitResponse\x12C\n" +
	"\bShutdown\x12\x1a.hkpplugin.ShutdownRequest\x1a\x1b.hkpplugin.ShutdownResponse\x122\n" +
	"\aGetInfo\x12\x10.hkpplugin.Empty\x1a\x15.hkpplugin.PluginInfo\x12D\n" +
	"\x11HandleHTTPRequest\x12\x16.hkpplugin.HTTPRequest\x1a\x17.hkpplugin.HTTPResponse\x12>\n" +
	"\x0fHandleKeyChange\x12\x19.hkpplugin.KeyChangeEvent\x1a\x10.hkpplugin.Event\x12=\n" +
	"\x0fSubscribeEvents\x12\x16.hkpplugin.EventFilter\x1a\x10.hkpplugin.Event0\x01\x122\n" +
	"\fPublishEvent\x12\x10.hkpplugin.Event\x1a\x10.hkpplugin.Empty\x12C\n" +
	"\fQueryStorage\x12\x17.hkpplugin.StorageQuery\x1a\x1a.hkpplugin.StorageResponse\x128\n" +
	"\vHealthCheck\x12\x10.hkpplugin.Empty\x1a\x17.hkpplugin.HealthStatus\x12I\n" +
	"\x0eCheckRateLimit\x12\x19.hkpplugin.RateLimitCheck\x1a\x1c.hkpplugin.RateLimitResponse\x127\n" +
	"\fReportThreat\x12\x15.hkpplugin.ThreatInfo\x1a\x10.hkpplugin.Empty2\xff\x01\n" +
	"\n" +
	"PluginHost\x124\n" +
	"\vGetHostInfo\x12\x10.hkpplugin.Empty\x1a\x13.hkpplugin.HostInfo\x12E\n" +
	"\x0eRequestStorage\x12\x17.hkpplugin.StorageQuery\x1a\x1a.hkpplugin.StorageResponse\x122\n" +
	"\fPublishEvent\x12\x10.hkpplugin.Event\x1a\x10.hkpplugin.Empty\x12@\n" +
	"\vQueryPlugin\x12\x16.hkpplugin.PluginQuery\x1a\x19.hkpplugin.PluginResponseB:Z8github.com/dobrevit/hkp-plugin-core/pkg/grpc/proto;protob\x06proto3"

var (
	file_proto_hkp_plugin_proto_rawDescOnce sync.Once
	file_proto_hkp_plugin_proto_rawDescData []byte
)

func file_proto_hkp_plugin_proto_rawDescGZIP() []byte {
	file_proto_hkp_plugin_proto_rawDescOnce.Do(func() {
		file_proto_hkp_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_hkp_plugin_proto_rawDesc), len(file_proto_hkp_plugin_proto_rawDesc)))
	})
	return file_proto_hkp_plugin_proto_rawDescData
}

var file_proto_hkp_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_hkp_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_proto_hkp_plugin_proto_goTypes = []any{
	(KeyChangeEvent_ChangeType)(0), // 0: hkpplugin.KeyChangeEvent.ChangeType
	(StorageQuery_QueryType)(0),    // 1: hkpplugin.StorageQuery.QueryType
	(HealthStatus_Status)(0),       // 2: hkpplugin.HealthStatus.Status
	(ThreatInfo_ThreatLevel)(0),    // 3: hkpplugin.ThreatInfo.ThreatLevel
	(*Empty)(nil),                  // 4: hkpplugin.Empty
	(*PluginInfo)(nil),             // 5: hkpplugin.PluginInfo
	(*InitRequest)(nil),            // 6: hkpplugin.InitRequest
	(*InitResponse)(nil),           // 7: hkpplugin.InitResponse
	(*ShutdownRequest)(nil),        // 8: hkpplugin.ShutdownRequest
	(*ShutdownResponse)(nil),       // 9: hkpplugin.ShutdownResponse
	(*HTTPRequest)(nil),            // 10: hkpplugin.HTTPRequest
	(*HTTPResponse)(nil),           // 11: hkpplugin.HTTPResponse
	(*KeyChangeEvent)(nil),         // 12: hkpplugin.KeyChangeEvent
	(*EventFilter)(nil),            // 13: hkpplugin.EventFilter
	(*Event)(nil),                  // 14: hkpplugin.Event
	(*StorageQuery)(nil),           // 15: hkpplugin.StorageQuery
	(*StorageResponse)(nil),        // 16: hkpplugin.StorageResponse
	(*KeyInfo)(nil),                // 17: hkpplugin.KeyInfo
	(*HealthStatus)(nil),           // 18: hkpplugin.HealthStatus
	(*RateLimitCheck)(nil),         // 19: hkpplugin.RateLimitCheck
	(*RateLimitResponse)(nil),      // 20: hkpplugin.RateLimitResponse
	(*ThreatInfo)(nil),             // 21: hkpplugin.ThreatInfo
	(*Capability)(nil),             // 22: hkpplugin.Capability
	(*HostInfo)(nil),               // 23: hkpplugin.HostInfo
	(*PluginQuery)(nil),            // 24: hkpplugin.PluginQuery
	(*PluginResponse)(nil),         // 25: hkpplugin.PluginResponse
	nil,                            // 26: hkpplugin.PluginInfo.MetadataEntry
	nil,                            // 27: hkpplugin.InitRequest.EnvironmentEntry
	nil,                            // 28: hkpplugin.HTTPRequest.HeadersEntry
	nil,                            // 29: hkpplugin.HTTPRequest.QueryParamsEntry
	nil,                            // 30: hkpplugin.HTTPResponse.HeadersEntry
	nil,                            // 31: hkpplugin.EventFilter.MetadataFiltersEntry
	nil,                            // 32: hkpplugin.Event.MetadataEntry
	nil,                            // 33: hkpplugin.StorageQuery.OptionsEntry
	nil,                            // 34: hkpplugin.HealthStatus.DetailsEntry
	nil,                            // 35: hkpplugin.RateLimitCheck.MetadataEntry
	nil,                            // 36: hkpplugin.RateLimitResponse.HeadersEntry
	nil,                            // 37: hkpplugin.ThreatInfo.IndicatorsEntry
	nil,                            // 38: hkpplugin.Capability.OptionsEntry
	nil,                            // 39: hkpplugin.HostInfo.ConfigurationEntry
}
var file_proto_hkp_plugin_proto_depIdxs = []int32{
	26, // 0: hkpplugin.PluginInfo.metadata:type_name -> hkpplugin.PluginInfo.MetadataEntry
	27, // 1: hkpplugin.InitRequest.environment:type_name -> hkpplugin.InitRequest.EnvironmentEntry
	5,  // 2: hkpplugin.InitResponse.info:type_name -> hkpplugin.PluginInfo
	28, // 3: hkpplugin.HTTPRequest.headers:type_name -> hkpplugin.HTTPRequest.HeadersEntry
	29, // 4: hkpplugin.HTTPRequest.query_params:type_name -> hkpplugin.HTTPRequest.QueryParamsEntry
	30, // 5: hkpplugin.HTTPResponse.headers:type_name -> hkpplugin.HTTPResponse.HeadersEntry
	0,  // 6: hkpplugin.KeyChangeEvent.change_type:type_name -> hkpplugin.KeyChangeEvent.ChangeType
	31, // 7: hkpplugin.EventFilter.metadata_filters:type_name -> hkpplugin.EventFilter.MetadataFiltersEntry
	32, // 8: hkpplugin.Event.metadata:type_name -> hkpplugin.Event.MetadataEntry
	1,  // 9: hkpplugin.StorageQuery.type:type_name -> hkpplugin.StorageQuery.QueryType
	33, // 10: hkpplugin.StorageQuery.options:type_name -> hkpplugin.StorageQuery.OptionsEntry
	17, // 11: hkpplugin.StorageResponse.keys:type_name -> hkpplugin.KeyInfo
	2,  // 12: hkpplugin.HealthStatus.status:type_name -> hkpplugin.HealthStatus.Status
	34, // 13: hkpplugin.HealthStatus.details:type_name -> hkpplugin.HealthStatus.DetailsEntry
	35, // 14: hkpplugin.RateLimitCheck.metadata:type_name -> hkpplugin.RateLimitCheck.MetadataEntry
	36, // 15: hkpplugin.RateLimitResponse.headers:type_name -> hkpplugin.RateLimitResponse.HeadersEntry
	3,  // 16: hkpplugin.ThreatInfo.level:type_name -> hkpplugin.ThreatInfo.ThreatLevel
	37, // 17: hkpplugin.ThreatInfo.indicators:type_name -> hkpplugin.ThreatInfo.IndicatorsEntry
	38, // 18: hkpplugin.Capability.options:type_name -> hkpplugin.Capability.OptionsEntry
	5,  // 19: hkpplugin.HostInfo.loaded_plugins:type_name -> hkpplugin.PluginInfo
	39, // 20: hkpplugin.HostInfo.configuration:type_name -> hkpplugin.HostInfo.ConfigurationEntry
	6,  // 21: hkpplugin.HKPPlugin.Initialize:input_type -> hkpplugin.InitRequest
	8,  // 22: hkpplugin.HKPPlugin.Shutdown:input_type -> hkpplugin.ShutdownRequest
	4,  // 23: hkpplugin.HKPPlugin.GetInfo:input_type -> hkpplugin.Empty
	10, // 24: hkpplugin.HKPPlugin.HandleHTTPRequest:input_type -> hkpplugin.HTTPRequest
	12, // 25: hkpplugin.HKPPlugin.HandleKeyChange:input_type -> hkpplugin.KeyChangeEvent
	13, // 26: hkpplugin.HKPPlugin.SubscribeEvents:input_type -> hkpplugin.EventFilter
	14, // 27: hkpplugin.HKPPlugin.PublishEvent:input_type -> hkpplugin.Event
	15, // 28: hkpplugin.HKPPlugin.QueryStorage:input_type -> hkpplugin.StorageQuery
	4,  // 29: hkpplugin.HKPPlugin.HealthCheck:input_type -> hkpplugin.Empty
	19, // 30: hkpplugin.HKPPlugin.CheckRateLimit:input_type -> hkpplugin.RateLimitCheck
	21, // 31: hkpplugin.HKPPlugin.ReportThreat:input_type -> hkpplugin.ThreatInfo
	4,  // 32: hkpplugin.PluginHost.GetHostInfo:input_type -> hkpplugin.Empty
	15, // 33: hkpplugin.PluginHost.RequestStorage:input_type -> hkpplugin.StorageQuery
	14, // 34: hkpplugin.PluginHost.PublishEvent:input_type -> hkpplugin.Event
	24, // 35: hkpplugin.PluginHost.QueryPlugin:input_type -> hkpplugin.PluginQuery
	7,  // 36: hkpplugin.HKPPlugin.Initialize:output_type -> hkpplugin.InitResponse
	9,  // 37: hkpplugin.HKPPlugin.Shutdown:output_type -> hkpplugin.ShutdownResponse
	5,  // 38: hkpplugin.HKPPlugin.GetInfo:output_type -> hkpplugin.PluginInfo
	11, // 39: hkpplugin.HKPPlugin.HandleHTTPRequest:output_type -> hkpplugin.HTTPResponse
	14, // 40: hkpplugin.HKPPlugin.HandleKeyChange:output_type -> hkpplugin.Event
	14, // 41: hkpplugin.HKPPlugin.SubscribeEvents:output_type -> hkpplugin.Event
	4,  // 42: hkpplugin.HKPPlugin.PublishEvent:output_type -> hkpplugin.Empty
	16, // 43: hkpplugin.HKPPlugin.QueryStorage:output_type -> hkpplugin.StorageResponse
	18, // 44: hkpplugin.HKPPlugin.HealthCheck:output_type -> hkpplugin.HealthStatus
	20, // 45: hkpplugin.HKPPlugin.CheckRateLimit:output_type -> hkpplugin.RateLimitResponse
	4,  // 46: hkpplugin.HKPPlugin.ReportThreat:output_type -> hkpplugin.Empty
	23, // 47: hkpplugin.PluginHost.GetHostInfo:output_type -> hkpplugin.HostInfo
	16, // 48: hkpplugin.PluginHost.RequestStorage:output_type -> hkpplugin.StorageResponse
	4,  // 49: hkpplugin.PluginHost.PublishEvent:output_type -> hkpplugin.Empty
	25, // 50: hkpplugin.PluginHost.QueryPlugin:output_type -> hkpplugin.PluginResponse
	36, // [36:51] is the sub-list for method output_type
	21, // [21:36] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_proto_hkp_plugin_proto_init() }
func file_proto_hkp_plugin_proto_init() {
	if File_proto_hkp_plugin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_hkp_plugin_proto_rawDesc), len(file_proto_hkp_plugin_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_hkp_plugin_proto_goTypes,
		DependencyIndexes: file_proto_hkp_plugin_proto_depIdxs,
		EnumInfos:         file_proto_hkp_plugin_proto_enumTypes,
		MessageInfos:      file_proto_hkp_plugin_proto_msgTypes,
	}.Build()
	File_proto_hkp_plugin_proto = out.File
	file_proto_hkp_plugin_proto_goTypes = nil
	file_proto_hkp_plugin_proto_depIdxs = nil
}
