# Makefile for Docker operations with Hockeypuck and plugins

.PHONY: help build up down logs shell test clean rebuild

# Default target
help:
	@echo "Available targets:"
	@echo "  make build      - Build Docker images"
	@echo "  make up         - Start all services"
	@echo "  make down       - Stop all services"
	@echo "  make logs       - Show logs from all services"
	@echo "  make shell      - Open shell in hockeypuck container"
	@echo "  make test       - Run integration tests"
	@echo "  make clean      - Clean up volumes and images"
	@echo "  make rebuild    - Clean and rebuild everything"
	@echo "  make dev        - Start with development profile"
	@echo "  make monitor    - Start with monitoring profile"

# Build Docker images
build:
	docker-compose build

# Start services
up:
	docker-compose up -d
	@echo "Waiting for services to be ready..."
	@sleep 10
	@echo "Services started. Hockeypuck available at http://localhost:11371"

# Start with development profile
dev:
	docker-compose --profile dev up -d

# Start with monitoring profile
monitor:
	docker-compose --profile monitoring up -d

# Stop services
down:
	docker-compose down

# View logs
logs:
	docker-compose logs -f

# Open shell in hockeypuck container
shell:
	docker-compose exec hockeypuck /bin/bash

# Open shell in dev-tools container
dev-shell:
	docker-compose exec dev-tools /bin/bash

# Test plugin loading
test:
	@echo "Testing Hockeypuck with plugins..."
	@docker-compose exec hockeypuck curl -s http://localhost:11371/pks/lookup?op=stats | grep -q "version" && \
		echo "✅ Hockeypuck is running" || echo "❌ Hockeypuck is not responding"
	@echo ""
	@echo "Checking plugin status..."
	@docker-compose exec hockeypuck curl -s http://localhost:11371/plugins/status 2>/dev/null || \
		echo "Plugin management endpoints not yet configured"

# Clean everything
clean:
	docker-compose down -v
	docker rmi hockeypuck-hockeypuck || true

# Rebuild from scratch
rebuild: clean build

# Show container status
status:
	@docker-compose ps
	@echo ""
	@echo "Health checks:"
	@docker-compose ps | grep -E "health|STATUS" || true

# Initialize database (if needed)
init-db:
	@echo "Initializing database schema..."
	docker-compose exec db psql -U hockeypuck -d hockeypuck -c "SELECT 1" || true

# Import test keys
import-test-keys:
	@echo "Importing test keys..."
	docker-compose exec hockeypuck bash -c 'curl -s https://keys.openpgp.org/vks/v1/by-fingerprint/653909A2F0E37C106F5FAF546C8857E0D8E8F074 | \
		curl -X POST -H "Content-Type: application/pgp-keys" --data-binary @- http://localhost:11371/pks/add'

# Backup data
backup:
	@mkdir -p backups
	@echo "Backing up PostgreSQL..."
	docker-compose exec db pg_dump -U hockeypuck hockeypuck | gzip > backups/hockeypuck-db-$$(date +%Y%m%d-%H%M%S).sql.gz
	@echo "Backup complete!"

# Load GeoIP database
load-geoip:
	@if [ -f "GeoLite2-City.mmdb" ]; then \
		echo "GeoIP database already exists"; \
	else \
		echo "Downloading GeoIP database..."; \
		echo "Please download from MaxMind and place as GeoLite2-City.mmdb"; \
	fi